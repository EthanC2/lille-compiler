JMP  0      14           (1) Jump over the predefined functions.
LDV  0      0            (2) Load argument.                
OPR  0      25           (3) Convert an integer to a real. 
OPR  0      1            (4) Function value return.        
LDV  0      0            (5) Load argument.                
OPR  0      26           (6) Convert a real to an integer. 
OPR  0      1            (7) Function value return.        
LDV  0      0            (8) Load argument.                
OPR  0      27           (9) Convert an integer to a string.
OPR  0      1            (10) Function value return.        
LDV  0      0            (11) Load argument.                
OPR  0      28           (12) Convert a real to a string.   
OPR  0      1            (13) Function value return.        
INC  0      0            (14) Reserve space for local variables
JMP  0      16           (15) Jump to start of statements or block.
JMP  0      35           (16) Unconditional jump.           
INC  0      3            (17) Reserve space for for-loop control variable, lb and ub values.
LCI  0      1            (18) Load integer value.           
OPR  0      23           (19) Duplicate top of stack        
STO  0      0            (20) Store the lower bound of the range as initial value of for loop parameter.
STO  0      1            (21) Store the lower bound of the range as the start value of the loop.
LCI  0      10           (22) Load integer value.           
STO  0      2            (23) Store the upper bound of the range as the end value of the loop.
LDV  0      0            (24) Load the value of the for loop parameter.
LDV  0      2            (25) Load the end value of the for loop.
OPR  0      15           (26) Check if loop parameter <= end value.
JIF  0      34           (27) Jump if false.                
LCI  0      100          (28) Load integer value.           
LDV  0      0            (29) Load the value of the for loop parameter.
LCI  0      1            (30) Load the value 1 onto the stack.
OPR  0      3            (31) Add values.                   
STO  0      0            (32) Store value of for loop parameter.
JMP  0      24           (33) Jump to beginning of for loop for next iteration.
OPR  0      0            (34) Return from for loop.         
MST  0      0            (35) Mark stack for for loop.      
CAL  0      17           (36) Effectively call the for loop - 0 parameters.
JMP  0      0            (37) Halt program.                 
